/*
<1>项目需求 : 
	1. 管理公司内部全部员工信息
	2. 员工 ： 普通员工、经理、老板
	3. 显示员工信息 ： 职工编号、姓名、岗位和职责
				普通员工职责 ： 完成经理交给的任务
				经理职责 ： 完成老板交给的任务 并下发任务给员工
				老板职责 ： 管理公司所有事物
	4. 管理系统功能 ：
				退出管理程序
				增加职工信息
				显示职工信息
				删除离职职工 (按编号)
				修改职工信息 (按编号)
				查找职工信息 (按照姓名或者编号)
				按照编号排序 (排序规则用户指定)
				清空所有文档
<2>管理类 ： Worker_System.cpp  && Worker_System.h
	1. 负责与用户沟通的菜单界面
	2. 对职工增删改查操作
	3. 与文件的读写交互
<3>职工类 : 
	1. 普通员工、老板、经理抽象成一个类 利用多态技术显示添加任意多种职工
	2. 职工具有属性 ： 编号、姓名、所在部门编号
	3. 职工具有函数 ： 查看岗位职责描述、 获取岗位名称
<4>  管理类的职能
	1. 添加职工函数
	1.1. 普通员工、经理可以批量创建
	1.2. 可以定义一个不定长度的数组 存放所有不同员工的指针
	1.3. 数组应该创建在堆区 利用所有不同员工类的父类指针Worker_Individual**进行维护
		   Worker_Individual** woker = new Worker_Individual*[5] 
		   右侧 ：开辟了一个父类的数组 存放不同员工的指针 
		   左侧 ： 父类数组本身也是地址 所以使用** 父类类型的地址去接收
	2. 保存文件函数 
        可以在运行中显示添加了多少个员工以及当前员工个数
		但是不能反映文件历史信息，即真正的职工人数 这里需要交给读取文件函数解决
	3. 读取文件函数
		3.1. 第一次使用 文件还没创建
		3.2.文件存在 但是数据已被清空
		3.3.文件存在，并且已有历史职工数据(主要情况)
		3.4.有历史数据就需要先加载文件信息
		string str = "职工编号 :4	职工姓名 :ccc	职工部门编号 :3";//41子节 中文2子节
		int arr1[3];
		int* p1 = arr1;
		int arr2[3];
		int* p2 = arr2;
		//cout << str.length() << endl;
		for (unsigned int i = 0; i < str.length(); i++)
		{
			if (str[i] == ':')
			{
				*p1 = i+1; //记录需要的字符串起始位置
				//continue; // 跳出第i次循环 执行第i+1次循环 遇到冒号就记录跳出循环
				p1++; // p记录了每个位置
				cout << i +1<< endl;//4 、c、3---->10、22、40   41是换行符
			}
			if (str[i] == '	')
			{
				*p2 = i ;
				p2++; // 记录了tab的位置 11、25、()第三个没有
				cout << i << endl;
			}
		}
		string id = str.substr(arr1[0], arr2[0] - arr1[0]); // id的字符串   substr(起始位置，截取的字符个数) =(10,11-10)
		string name = str.substr(arr1[1],arr2[1]-arr1[1]); // (22,25-22)
		string did = str.substr(arr1[2], str.length() - arr1[2]); //(40,41-40)
		int _id = stoi(id);  //字符串转整型
		int _did = stoi(did);
		cout << typeid(_id).name() << _id << endl;
		3.5. 拆分得到了每个员工的姓名、编号和部门编号
	4. 展示员工信息
	5. 删除员工
	6. 修改员工信息
	7. 查找员工信息
	8. 员工编号排序
	9. 清空文件


*/