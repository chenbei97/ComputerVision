// STL = 容器(containter) + 算法 (algorithm)+ 迭代器(iterator)
// 六大组件： 容器、算法、迭代器、仿函数、适配器(配接器)、空间配置
// 迭代器：容器和算法之间通过迭代器进行无缝衔接，提供一种方法使之能够依序寻访某个容器的各个元素
	// 又无需暴漏容器的内部表示方式，每个容器有自己专属容器，迭代器非常类似指针
	// 迭代器种类：输入迭代器、输出迭代器、前向迭代器、双向迭代器、随机访问迭代器
	// 容器：各种数据结构，如vetor、list、deque、set、map等(数组、链表、树、栈、队列、集合、映射表)
// 算法：sorrt、fnd、copy、for_each(质变算法和非质变算法)
	// 质变算法：拷贝、替换、删除等会更改区间的元素
	// 非质变算法：查找、计数、遍历、寻找极值等
// 仿函数：行为类似函数，可作为算法的某种策略
// 适配器：一种用来修饰容器或者仿函数或迭代器接口的东西
// 空间配置器：负责空间的配置和管理




















