#include "all.h"
/*
一个微妙的问题是，对一个指向a的常量指针p来说，说明的是对自身p而言，a是常量，并不是a就是常量；
a可以通过别的普通指针进行修改，但是不能通过这个指针p来修改，这是需要理解的地方！！！
0级指针（指针与变量之间）的定义存在6种情况：
- 将常规变量的地址赋给常规指针
- 将常规变量的地址赋给常量指针
- 将常规变量的地址赋给指针常量
- 将const变量的地址赋给常规指针 （无效），因为能赋值的话意味着常规指针可以修改const变量的值，这与const本身冲突
- 将const变量的地址赋给常量指针
- 将const变量的地址赋给指针常量（无效），指针常量也可以修改值，与const本身冲突
*/
void Study_pointer_to_variable();
/*
指向指针的指针与指向变量的指针之间的指向存在9种情况：

- 一级常规指针指向0级常规指针,改变值和指向合法（前者值可变，后者值可变；前者方向可变，后者方向可变）
- 一级常规指针指向0级常量指针（无效）（前者值可变，后者值不可变，冲突！）
- 一级常规指针指向0级指针常量.改变值和指向合法（前者值可变，后者值可变；前者方向可变，后者方向不可变，前者决定后者）

- 一级常量指针指向0级常规指针,改变指向合法,改变值非法（前者值不可变，后者值可变，前者决定后者；前者方向可变，后者方向可变）
- 一级常量指针指向0级常量指针,改变指向合法,改变值非法（前者值不可变，后者值不可变；前者方向可变，后者方向可变）
- 一级常量指针指向0级指针常量,改变指向非法,改变值合法（前者值不可变，后者值可变，后者决定前者；前者方向可变，后者方向不可变，后者决定前者）

- 一级指针常量指向0级常规指针,改变指向非法,改变值合法（前者值可变，后者值可变，后者决定前者；前者方向不可变，后者方向可变，前者决定后者）
- 一级指针常量指向0级常量指针,改变指向合法,改变值非法（前者值可变，后者值不可变，后者决定前者；前者方向不可变，后者方向可变，后者决定前者）
- 一级指针常量指向0级指针常量,改变指向非法,改变值合法（前者值可变，后者值可变；前者方向不可变，后者方向不可变）

- 从结果来看：
- 一级常规指针<<>>常规指针（一致）
- 一级常规指针<<!>>常量指针（冲突）
- 一级常规指针>>指针常量（有常规指针参与的不同指针之间，指向的决定被指向）
- 一级常量指针>>常规指针（有常规指针参与的不同指针之间，指向的决定被指向）
- 一级常量指针<<>>常量指针（一致）
- 一级常量指针<<指针常量（指针常量和常量指针之间，被指向的决定指向）
- 一级指针常量>>常规指针（有常规指针参与的不同指针之间，指向的决定被指向）
- 一级指针常量<<常量指针（指针常量和常量指针之间，被指向的决定指向）
- 一级指针常量<<>>指针常量（一致）
*/
void Study_pointer_to_pointer_primary();

void Study_Const_Pointer()
{
	// 0级指针（指针与变量之间）
	Study_pointer_to_variable();
	// 一级指针(指向指针的指针与指向变量的指针)
	Study_pointer_to_pointer_primary();
	// 二级指针(其他情况),更加复杂且不再安全
	system("pause");
}
void Study_pointer_to_variable()
{
	// <1> 0级指针(指针与变量之间)
	int  a = 0 ,  tem_a =0;
    // 1.常规变量地址-->常规指针
	int* pa = &a;
	pa = &tem_a; // 改变地址合法
	*pa = 1; // 改变值合法
	// 2.常规变量地址-->常量指针
	int const* cpa = &a;
	cpa = &tem_a; // 改变地址合法
	// *cpa = 1;  改变值非法
	// 3.常规变量地址-->指针常量
	int* const pca = &a;
	// pca = &tem_a; 改变地址非法
	*pca = 1; // 改变值合法
	// 4. const变量地址-->常规指针(无效)
	const int b = 0;
	int const c = 0; // int const和const int是等价的
	// int* pb = &b;  非法,const变量地址不能改变与普通指针可改变值冲突
	// 5.const变量地址-->常量指针
	int const* cpb = &b;
	const int* cpb_ = &b;// int const* 和const int*等价
	cpb = &c; // 改变地址合法
	//*cpb = 1; 改变值非法
	// *cpb_ = 1 ; 改变值非法
	//6.const变量地址-->指针常量(无效)
	// int* const pcb = &b; 非法,const变量地址不能改变与指针常量可改变值冲突
}
void Study_pointer_to_pointer_primary()
{
	int a1 = 0, a2 = 0;
	int const b1 = 0, b2 = 0;
	//<2> 一级指针(指向指针的指针与指向变量的指针)
	int* pa1 = &a1; // 常规指针指向常规变量a1
	int* pa2 = &a2; // 常规指针指向常规变量a2
	int const* pca1 = &a1; // 常量指针指向常规变量a1
	int const* pca2 = &a2; // 常量指针指向常规变量a2
	int* const cpa1 = &a1; // 指针常量指向常规变量a1
	int* const cpa2 = &a2; // 指针常量指向常规变量a2

    // 常规指针指向const变量b1,b2(非法)
	// 指针常量指向const变量b1,b2(非法)
	int const* pcb1 = &b1; // 常量指针指向const变量b1
	int const* pcb2 = &b2;// 常量指针指向const变量b2

	// 一级常规指针：ppa1_1、ppa1_2、ppa1_3
	// 1.一级常规指针指向0级常规指针(pa1,pa2)
	cout << "1.一级常规指针指向0级常规指针(pa1,pa2)" << endl;
	int* ppa1_1 = pa1;
	ppa1_1 = pa2; // 改变指向合法,指向其他指针
	ppa1_1 = &a2; // 改变指向合法,指向1个地址
	*ppa1_1 = 2; // 改变值合法,指向指针的指针,可以改变常规指针指向的值
	cout << "	一级常规指针，可以改变指向，指向0级常规指针pa1的ppa1_1可指向pa2和&a2" << endl;
	cout << "	*ppa1_1=" << *ppa1_1 << "  *pa2=" << *pa2 << "  a2=" << a2 <<
		"   .一级常规指针，可以改变0级常规指针指向的值"<< endl;//*ppa1_1=2  *pa2=2  a2=2
     // 2. 一级常规指针指向0级常量指针(pca1,pca2) 非法
	 cout << "2. 一级常规指针指向0级常量指针(pca1,pca2) 非法" << endl;
	// int* ppa1_2 = pca1; 非法,一级常规指针可以改变值与0级常量指针不可改变值冲突
	cout << "	一级常规指针，不能指向0级常量指针，一级常规指针可以改变值与0级常量指针不可改变值冲突" << endl;
	// 3.一级常规指针指向0级指针常量(cpa1,cpa2)
	cout << "3.一级常规指针指向0级指针常量(cpa1,cpa2)" << endl;
	int* ppa1_3 = cpa1;
	ppa1_3 = cpa2; // 改变指向合法,指向其他指针
	ppa1_3 = &a2;  //改变指向合法,指向1个地址
	*ppa1_3 = 3; // 改变值合法,指向指针的指针,可以改变指针常量指向的值
	cout << "	一级常规指针，可以改变指向，指向0级指针常量cpa1的ppa1_3可指向cpa2和&a2" << endl;
	cout << "	*ppa1_3=" << *ppa1_3 << "  *cpa2=" << *cpa2 << "  a2=" << a2 <<
		"   一级常规指针，可以改变0级指针常量指向的值" << endl;//*ppa1_1=3  *pa2=3  a2=3
	cout << endl;
	
	// 一级常量指针：ppca1_1、ppca1_2、ppca1_3
	// 4.一级常量指针指向0级常规指针(pa1,pa2)
	cout << "4.一级常量指针指向0级常规指针(pa1,pa2)" << endl;
	int const *ppca1_1 = pa1;
	ppca1_1 = pa2; // 改变指向合法,指向其他指针
	ppca1_1 = &a2; // 改变指向合法,指向1个地址
	cout << "	一级常量指针，指向0级常规指针pa1的ppca1_1可指向pa2和&a2，可以改变指向，不可改变值" << endl;
	// *ppca1_1 = 1; 改变值非法
	// 5.一级常量指针指向0级常量指针(pca1,pca2) 
	cout << "5.一级常量指针指向0级常量指针(pca1,pca2) " << endl;
	int const* ppca1_2 = pca1; 
	ppca1_2 = pca2; // 改变指向合法,指向其他指针
	ppca1_2 = &a2;// 改变指向合法,指向1个地址
	// *ppca1_2 = 1; 改变值非法
	cout << "	一级常量指针，指向0级常量指针pca1的ppca1_2可指向pca2和&a2，可以改变指向，不可改变值" << endl;
	// 6.一级常量指针指向0级指针常量(cpa1,cpa2)
	cout << "6.一级常量指针指向0级指针常量(cpa1,cpa2)" << endl;
	int* const ppca1_3 = cpa1;
	// ppca1_3 = cpa2; 改变指向非法
	*ppca1_3 = 1; // 改变值合法
	cout << "	一级常量指针，指向0级指针常量cpa1的ppca1_3不可指向cpa2和&a2，不可改变指向，可改变值" << endl;
	cout << "	*ppca1_3=" << *ppca1_3 << "  *cpa1=" << *cpa1 << "  a1=" << a1 <<
		"   一级常量指针，可以改变0级指针常量指向的值" << endl;//*ppca1_3=1  *pa1=1  a1=1
	cout << endl;

	// 一级指针常量：pcpa1_1、pcpa1_2、pcpa1_3
	// 7.一级指针常量指向0级常规指针(pa1,pa2)
	cout << "7.一级指针常量指向0级常规指针(pa1,pa2)" << endl;
	cout << "	一级指针常量，指向0级常规指针pa1的pcpa1_1不可指向pa2和&a2，不可改变指向，可改变值" << endl;
	int* const pcpa1_1 = pa1;
	// pcpa1_1 = pa2; 改变指向非法
	*pcpa1_1 = 4; // 改变值合法
	cout << "	*pcpa1_1=" << *pcpa1_1 << "  *pa1=" << *pa1 << "  a1=" << a1 <<
		"   .一级指针常量，可以改变0级常规指针指向的值" << endl;//*pcpa1_1=4  *pa1=4  a1=4

	// 8.一级指针常量指向0级常量指针(pca1,pca2) 
	cout << "8.一级指针常量指向0级常量指针(pca1,pca2) " << endl;
	int const* pcpa1_2 = pca1;
	pcpa1_2 = pca2; // 改变指向合法,指向其他指针
	pcpa1_2 = &a2;// 改变指向合法,指向1个地址
	// *pcpa1_2 = 5; 改变值非法
	cout << "	一级指针常量，指向0级常量指针pca1的pcpa1_2可指向pca2和&a2，可以改变指向，不可改变值" << endl;
	// 9.一级指针常量指向0级指针常量(cpa1,cpa2)
	cout << "9.一级指针常量指向0级指针常量(cpa1,cpa2)" << endl;
	int* const pcpa1_3 = cpa1;
	// pcpa1_3 = cpa2; 改变指向非法
	cout << "	一级指针常量，指向0级指针常量cpa1的pcpa1_3不可指向cpa2和&a2，不可改变指向，可改变值" << endl;
	*pcpa1_3 = 6;
	cout << "	*pcpa1_3=" << *pcpa1_3 << "  *cpa1=" << *cpa1 << "  a1=" << a1 <<
		"   一级指针常量，可以改变0级指针常量指向的值" << endl;//*pcpa1_3=6  *pa1=6  a1=6
	cout << endl;
}